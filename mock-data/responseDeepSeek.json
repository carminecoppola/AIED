{
    "exercises": [
        {
            "name": "Sum of Two Numbers",
            "description": "Write a function that takes two numbers as input and returns their sum.",
            "code": "def sum_two_numbers(a, b):\n    return a + b",
            "tests": [
                {
                    "input": [
                        2,
                        3
                    ],
                    "output": 5
                },
                {
                    "input": [
                        -1,
                        1
                    ],
                    "output": 0
                },
                {
                    "input": [
                        10,
                        20
                    ],
                    "output": 30
                }
            ]
        },
        {
            "name": "Factorial of a Number",
            "description": "Write a function to compute the factorial of a given number.",
            "code": "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)",
            "tests": [
                {
                    "input": [
                        5
                    ],
                    "output": 120
                },
                {
                    "input": [
                        0
                    ],
                    "output": 1
                },
                {
                    "input": [
                        3
                    ],
                    "output": 6
                }
            ]
        },
        {
            "name": "Check Palindrome",
            "description": "Write a function to check if a given string is a palindrome.",
            "code": "def is_palindrome(s):\n    return s == s[::-1]",
            "tests": [
                {
                    "input": [
                        "madam"
                    ],
                    "output": "True"
                },
                {
                    "input": [
                        "hello"
                    ],
                    "output": "False"
                },
                {
                    "input": [
                        "racecar"
                    ],
                    "output": "True"
                }
            ]
        },
        {
            "name": "Find Maximum in List",
            "description": "Write a function to find the maximum number in a list.",
            "code": "def find_max(lst):\n    return max(lst)",
            "tests": [
                {
                    "input": [
                        [
                            1,
                            2,
                            3,
                            4,
                            5
                        ]
                    ],
                    "output": 5
                },
                {
                    "input": [
                        [
                            -1,
                            -2,
                            -3
                        ]
                    ],
                    "output": -1
                },
                {
                    "input": [
                        [
                            10
                        ]
                    ],
                    "output": 10
                }
            ]
        },
        {
            "name": "Count Vowels in String",
            "description": "Write a function to count the number of vowels in a given string.",
            "code": "def count_vowels(s):\n    vowels = 'aeiouAEIOU'\n    return sum(1 for char in s if char in vowels)",
            "tests": [
                {
                    "input": [
                        "hello"
                    ],
                    "output": 2
                },
                {
                    "input": [
                        "Python"
                    ],
                    "output": 1
                },
                {
                    "input": [
                        "AEIOU"
                    ],
                    "output": 5
                }
            ]
        },
        {
            "name": "Reverse a List",
            "description": "Write a function to reverse a list without using built-in reverse functions.",
            "code": "def reverse_list(lst):\n    return lst[::-1]",
            "tests": [
                {
                    "input": [
                        [
                            1,
                            2,
                            3,
                            4
                        ]
                    ],
                    "output": [
                        4,
                        3,
                        2,
                        1
                    ]
                },
                {
                    "input": [
                        [
                            10,
                            20,
                            30
                        ]
                    ],
                    "output": [
                        30,
                        20,
                        10
                    ]
                },
                {
                    "input": [
                        []
                    ],
                    "output": []
                }
            ]
        },
        {
            "name": "Fibonacci Sequence",
            "description": "Write a function to generate the first n numbers of the Fibonacci sequence.",
            "code": "def fibonacci(n):\n    a, b = 0, 1\n    result = []\n    for _ in range(n):\n        result.append(a)\n        a, b = b, a + b\n    return result",
            "tests": [
                {
                    "input": [
                        5
                    ],
                    "output": [
                        0,
                        1,
                        1,
                        2,
                        3
                    ]
                },
                {
                    "input": [
                        1
                    ],
                    "output": [
                        0
                    ]
                },
                {
                    "input": [
                        10
                    ],
                    "output": [
                        0,
                        1,
                        1,
                        2,
                        3,
                        5,
                        8,
                        13,
                        21,
                        34
                    ]
                }
            ]
        },
        {
            "name": "Check Prime Number",
            "description": "Write a function to check if a given number is prime.",
            "code": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True",
            "tests": [
                {
                    "input": [
                        2
                    ],
                    "output": "True"
                },
                {
                    "input": [
                        4
                    ],
                    "output": "False"
                },
                {
                    "input": [
                        29
                    ],
                    "output": "True"
                }
            ]
        },
        {
            "name": "Merge Two Sorted Lists",
            "description": "Write a function to merge two sorted lists into a single sorted list.",
            "code": "def merge_sorted_lists(lst1, lst2):\n    return sorted(lst1 + lst2)",
            "tests": [
                {
                    "input": [
                        [
                            1,
                            3,
                            5
                        ],
                        [
                            2,
                            4,
                            6
                        ]
                    ],
                    "output": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ]
                },
                {
                    "input": [
                        [],
                        [
                            1,
                            2,
                            3
                        ]
                    ],
                    "output": [
                        1,
                        2,
                        3
                    ]
                },
                {
                    "input": [
                        [
                            10
                        ],
                        [
                            5,
                            15
                        ]
                    ],
                    "output": [
                        5,
                        10,
                        15
                    ]
                }
            ]
        },
        {
            "name": "Longest Common Prefix",
            "description": "Write a function to find the longest common prefix string among a list of strings.",
            "code": "def longest_common_prefix(strs):\n    if not strs:\n        return ''\n    prefix = strs[0]\n    for s in strs[1:]:\n        while s[:len(prefix)] != prefix:\n            prefix = prefix[:-1]\n            if not prefix:\n                return ''\n    return prefix",
            "tests": [
                {
                    "input": [
                        [
                            "flower",
                            "flow",
                            "flight"
                        ]
                    ],
                    "output": "fl"
                },
                {
                    "input": [
                        [
                            "dog",
                            "racecar",
                            "car"
                        ]
                    ],
                    "output": ""
                },
                {
                    "input": [
                        [
                            "interspecies",
                            "interstellar",
                            "interstate"
                        ]
                    ],
                    "output": "inters"
                }
            ]
        }
    ]
}